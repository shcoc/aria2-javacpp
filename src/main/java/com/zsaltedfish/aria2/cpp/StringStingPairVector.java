// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package com.zsaltedfish.aria2.cpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static com.zsaltedfish.aria2.global.Aria2.*;

@Name("std::vector<std::pair<std::string,std::string> >") @Properties(inherit = com.zsaltedfish.aria2.prest.Aria2.class)
public class StringStingPairVector extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public StringStingPairVector(Pointer p) { super(p); }
    public StringStingPairVector(BytePointer[] firstValue, BytePointer[] secondValue) { this(Math.min(firstValue.length, secondValue.length)); put(firstValue, secondValue); }
    public StringStingPairVector(String[] firstValue, String[] secondValue) { this(Math.min(firstValue.length, secondValue.length)); put(firstValue, secondValue); }
    public StringStingPairVector()       { allocate();  }
    public StringStingPairVector(long n) { allocate(n); }
    private native void allocate();
    private native void allocate(@Cast("size_t") long n);
    public native @Name("operator =") @ByRef StringStingPairVector put(@ByRef StringStingPairVector x);

    public boolean empty() { return size() == 0; }
    public native long size();
    public void clear() { resize(0); }
    public native void resize(@Cast("size_t") long n);

    @Index(function = "at") public native @StdString BytePointer first(@Cast("size_t") long i); public native StringStingPairVector first(@Cast("size_t") long i, BytePointer first);
    @Index(function = "at") public native @StdString BytePointer second(@Cast("size_t") long i);  public native StringStingPairVector second(@Cast("size_t") long i, BytePointer second);
    @MemberSetter @Index(function = "at") public native StringStingPairVector first(@Cast("size_t") long i, @StdString String first);
    @MemberSetter @Index(function = "at") public native StringStingPairVector second(@Cast("size_t") long i, @StdString String second);

    public StringStingPairVector put(BytePointer[] firstValue, BytePointer[] secondValue) {
        for (int i = 0; i < firstValue.length && i < secondValue.length; i++) {
            first(i, firstValue[i]);
            second(i, secondValue[i]);
        }
        return this;
    }

    public StringStingPairVector put(String[] firstValue, String[] secondValue) {
        for (int i = 0; i < firstValue.length && i < secondValue.length; i++) {
            first(i, firstValue[i]);
            second(i, secondValue[i]);
        }
        return this;
    }
}

